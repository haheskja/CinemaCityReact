// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReactFinal.Models;

namespace ReactFinal.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20181111143653_DatabaseCreate")]
    partial class DatabaseCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ReactFinal.Models.Faq", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer");

                    b.Property<string>("Question");

                    b.HasKey("Id");

                    b.ToTable("Faq");

                    b.HasData(
                        new { Id = 1, Answer = "You can currently not change this yourself, please contact an admin.", Question = "How can I change my account info?" },
                        new { Id = 2, Answer = "We are working with major movie studios, stay tuned!", Question = "When will you update your inventory?" },
                        new { Id = 3, Answer = "Yes! Contact mail@cinemacity.com", Question = "Are you hiring?" },
                        new { Id = 4, Answer = "Make sure you have enough space on your computer and that CinemaCity isn't blocked.", Question = "My movies are not downloading!" },
                        new { Id = 5, Answer = "To mail@cinemacity.com :)", Question = "Where can I send tips?" },
                        new { Id = 6, Answer = "Please submit a detailed bug report to mail@cinemacity.com and we'll be on it immediately!", Question = "Cart always crashes!" }
                    );
                });

            modelBuilder.Entity("ReactFinal.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Header");

                    b.Property<int>("Rating");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.ToTable("Question");
                });
#pragma warning restore 612, 618
        }
    }
}
